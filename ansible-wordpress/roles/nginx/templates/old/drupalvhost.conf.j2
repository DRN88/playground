#server {
#       listen         80;
#       server_name    {{ vhostfqdn }};
#       return         301 https://{{ vhostfqdn }}$request_uri;
#}

server {
        listen 80;

        server_name {{ vhostfqdn }};
        root {{ vhostspath }}/{{ vhostfqdn }};

        index index.php;

        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }

        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }

        # This matters if you use drush
        location = /backup {
                deny all;
        }

        # Very rarely should these ever be accessed outside of your lan
        location ~* \.(txt|log)$ {
                allow 127.0.0.1;
                deny all;
        }

        location ~ \..*/.*\.php {
                return 403;
        }

        location / {
                # This is cool because no php is touched for static content
                try_files $uri $uri/ @rewrite;
                expires max;
        }

        location @rewrite {
                # Some modules enforce no slash (/) at the end of the URL
                # Else this rewrite block wouldn&#39;t be needed (GlobalRedirect)
                rewrite ^/(.*)$ /index.php?q=$1;
        }

        location ~ \.php$ {

                ### FASTCGI CACHING START ###

                # Setup var defaults
                set $no_cache "";

                # If non GET/HEAD, don't cache and mark user as uncacheable for 1 second via cookie
                if ($request_method !~ ^(GET|HEAD)$) {
                  set $no_cache "1";
                }

                # Drop no cache cookie if need be
                # (for some reason, add_header fails if included in prior if-block)
                if ($no_cache = "1") {
                  add_header Set-Cookie "_mcnc=1; Max-Age=2; Path=/";
                  add_header X-Microcachable "0";
                }

                # Bypass cache if no-cache cookie is set
                if ($http_cookie ~* "_mcnc") {
                  set $no_cache "1";
                }

                # Bypass cache if flag is set
                fastcgi_no_cache $no_cache;
                fastcgi_cache_bypass $no_cache;

                fastcgi_cache microcache;
                fastcgi_cache_key $server_name|$request_uri;
                fastcgi_cache_valid 200 301 302 404 {{ nginx_fastcgicache_valid }};
                fastcgi_max_temp_file_size {{ nginx_fastcgicache_max_temp_file_size }};
                fastcgi_cache_use_stale updating;
                fastcgi_pass_header Set-Cookie;
                fastcgi_pass_header Cookie;
                fastcgi_ignore_headers Cache-Control Expires Set-Cookie;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;

                ### FASTCGI CACHING END ###


                include fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_intercept_errors on;
                fastcgi_pass unix:/run/php/php-fpm.sock;
        }

}
